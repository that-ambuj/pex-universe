basePath: /
definitions:
  model.EntityDeletedResponse:
    properties:
      message:
        type: string
      rowsAffected:
        type: integer
    type: object
  model.ErrorResponse:
    properties:
      message:
        example: '''field'' has failed the constraint: ''constraint'' (vale: ''actual
          value'')'
        type: string
      status:
        example: 400
        type: integer
      success:
        example: false
        type: boolean
    type: object
  product.Category:
    properties:
      brandAttributeCollapsed:
        type: boolean
      brandAttributeEnabled:
        type: boolean
      buttonContent:
        type: string
      buttonEnable:
        type: boolean
      buttonTitle:
        type: string
      children:
        items:
          $ref: '#/definitions/product.Category'
        type: array
      createdAt:
        type: string
      customCategory:
        type: boolean
      defaultSorting:
        type: boolean
      displayTitle:
        type: string
      firstDescription:
        type: string
      id:
        type: integer
      image:
        type: string
      metaDescription:
        type: string
      metaTitle:
        type: string
      position:
        type: integer
      priceAttributeCollapsed:
        type: boolean
      priceAttributeEnabled:
        type: boolean
      published:
        type: boolean
      secondDescription:
        type: string
      slug:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  product.Coupon:
    properties:
      amount:
        type: number
      code:
        type: string
      createdAt:
        type: string
      expire:
        type: string
      id:
        type: integer
      maxUses:
        type: integer
      name:
        type: string
      qualifyingAmount:
        type: number
      type:
        type: integer
      updatedAt:
        type: string
    type: object
  product.Manufacturer:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
      slug:
        type: string
      updatedAt:
        type: string
    type: object
  product.Product:
    properties:
      application:
        type: string
      caPropWarning:
        type: boolean
      coupons:
        items:
          $ref: '#/definitions/product.Coupon'
        type: array
      createdAt:
        type: string
      crossRef:
        type: string
      customLabel:
        type: string
      declareValue:
        type: boolean
      description:
        type: string
      discontinued:
        type: boolean
      discontinuedReplacement:
        type: string
      discountDeadline:
        type: string
      discountPrice:
        type: number
      discountStartDate:
        type: string
      documentation:
        type: string
      faqGroupLabel:
        type: string
      faqs:
        items:
          $ref: '#/definitions/product.ProductFaq'
        type: array
      features:
        type: string
      fluid:
        type: boolean
      freeShipping:
        type: boolean
      freightOnly:
        type: boolean
      height:
        type: number
      hideManufacturer:
        type: boolean
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/product.ProductImage'
        type: array
      inStockAtSupplier:
        type: boolean
      length:
        type: number
      listPosition:
        type: integer
      lwhUnit:
        type: string
      madeInUsa:
        type: boolean
      manufacturer:
        allOf:
        - $ref: '#/definitions/product.Manufacturer'
        description: Joins
      metaDescription:
        type: string
      metaTitle:
        type: string
      model:
        type: string
      nonPickup:
        type: boolean
      notLeadFree:
        type: boolean
      note:
        type: string
      partNumber:
        type: string
      pickupDiscount:
        type: number
      pickupOnly:
        type: boolean
      pickupPrice:
        type: number
      possibleFraud:
        type: boolean
      pricePerFoot:
        type: number
      priceRangeId:
        type: integer
      published:
        type: boolean
      relatedProducts:
        items:
          $ref: '#/definitions/product.Product'
        type: array
      replacement:
        type: string
      reviewGroupLabel:
        type: string
      reviews:
        items:
          $ref: '#/definitions/product.ProductReview'
        type: array
      sellPrice:
        type: number
      sellQty:
        type: integer
      shelfIdExtra:
        type: string
      shipDedicatedBox:
        type: integer
      shipSelfPackaging:
        type: boolean
      shipSeparately:
        type: boolean
      shippingMethods:
        items:
          $ref: '#/definitions/product.ShippingMethod'
        type: array
      showMapPrice:
        type: boolean
      slug:
        type: string
      specOrder:
        type: boolean
      stockQuantity:
        type: integer
      techSpecs:
        type: string
      temporaryUnavailable:
        type: boolean
      title:
        type: string
      upc:
        type: string
      updatedAt:
        type: string
      usuallyShips:
        type: string
      warranty:
        type: string
      weight:
        type: number
      weightUnits:
        type: string
      width:
        type: number
    type: object
  product.ProductFaq:
    properties:
      answer:
        type: string
      answered:
        type: string
      createdAt:
        type: string
      emailed:
        type: boolean
      forCustomerService:
        type: boolean
      id:
        type: integer
      name:
        type: string
      published:
        type: boolean
      question:
        type: string
      updatedAt:
        type: string
    type: object
  product.ProductImage:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      position:
        type: integer
      src:
        type: string
      updatedAt:
        type: string
    type: object
  product.ProductReview:
    properties:
      contents:
        allOf:
        - $ref: '#/definitions/product.ProductReviewContent'
        description: Joins
      createdAt:
        type: string
      fromEmail:
        type: boolean
      id:
        type: integer
      published:
        type: boolean
      rating:
        type: integer
      reasonNotApproved:
        type: string
      updatedAt:
        type: string
      verified:
        type: boolean
    type: object
  product.ProductReviewContent:
    properties:
      comment:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      originalText:
        type: string
      reply:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  product.ShippingMethod:
    properties:
      active:
        type: boolean
      class:
        type: string
      createdAt:
        type: string
      cutoff:
        type: integer
      discount:
        type: integer
      freeShippingApplies:
        type: boolean
      freightDiscount:
        type: integer
      id:
        type: integer
      maxDiscount:
        type: integer
      method:
        type: string
      position:
        type: integer
      serviceDays:
        type: string
      shipDays:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  routes.AddressesResponse:
    properties:
      count:
        type: integer
      currentPage:
        type: integer
      data:
        items:
          $ref: '#/definitions/user.Address'
        type: array
      totalPages:
        type: integer
    type: object
  routes.CategoriesResp:
    properties:
      count:
        type: integer
      currentPage:
        type: integer
      data:
        items:
          $ref: '#/definitions/product.Category'
        type: array
      totalPages:
        type: integer
    type: object
  routes.Hello:
    properties:
      message:
        type: string
    type: object
  routes.HomePageResp:
    properties:
      brands:
        items:
          $ref: '#/definitions/product.Manufacturer'
        type: array
      categories:
        items:
          $ref: '#/definitions/product.Category'
        type: array
    type: object
  routes.ProductsResp:
    properties:
      count:
        type: integer
      currentPage:
        type: integer
      data:
        items:
          $ref: '#/definitions/product.Product'
        type: array
      totalPages:
        type: integer
    type: object
  routes.ProfileUpdateDto:
    properties:
      name:
        example: John Doe
        type: string
    type: object
  user.Address:
    properties:
      city:
        example: Tokyo
        type: string
      company:
        type: string
      country:
        $ref: '#/definitions/user.Country'
      createdAt:
        type: string
      email:
        example: john@example.com
        type: string
      ext:
        type: string
      firstName:
        example: John
        type: string
      id:
        type: integer
      lastName:
        example: Doe
        type: string
      phone:
        example: "+11349503120"
        type: string
      state:
        $ref: '#/definitions/user.State'
      streetAddress1:
        type: string
      streetAddress2:
        type: string
      updatedAt:
        type: string
      verified:
        type: boolean
      zip:
        type: string
    type: object
  user.AddressCreateDto:
    properties:
      city:
        example: Los Angeles
        type: string
      company:
        type: string
      countryID:
        minimum: 1
        type: integer
      email:
        example: john@example.com
        type: string
      ext:
        type: string
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
      phone:
        example: "+12380941034"
        type: string
      stateID:
        minimum: 1
        type: integer
      streetAddress1:
        type: string
      streetAddress2:
        type: string
      zip:
        type: string
    type: object
  user.AddressUpdateDto:
    properties:
      city:
        example: New York
        type: string
      company:
        type: string
      countryId:
        minimum: 1
        type: integer
      email:
        example: john@example.com
        type: string
      ext:
        type: string
      firstName:
        example: Jane
        type: string
      lastName:
        example: Doe
        type: string
      phone:
        example: "+12380941034"
        type: string
      stateId:
        minimum: 1
        type: integer
      streetAddress1:
        type: string
      streetAddress2:
        type: string
      zip:
        type: string
    type: object
  user.Card:
    properties:
      cardNumber:
        type: string
      cardNumberLength:
        type: integer
      cardType:
        type: string
      createdAt:
        type: string
      expMonth:
        type: string
      expYear:
        type: string
      id:
        type: integer
      paymentMethod:
        allOf:
        - $ref: '#/definitions/user.PaymentMethod'
        description: Joins
      transaction_id:
        type: string
      updatedAt:
        type: string
    type: object
  user.CardCreateDto:
    properties:
      cardNumber:
        example: "4242424242424242"
        type: string
      cardType:
        $ref: '#/definitions/user.CardType'
      expMonth:
        example: "06"
        type: string
      expYear:
        example: "2026"
        type: string
      paymentMethod:
        $ref: '#/definitions/user.PaymentMethodName'
      transaction_id:
        type: string
    type: object
  user.CardType:
    enum:
    - American Express
    - Visa
    - Mastercard
    - Discover
    type: string
    x-enum-varnames:
    - Amex
    - Visa
    - MasterCard
    - Discover
  user.Cart:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/user.CartProduct'
        type: array
      updatedAt:
        type: string
    type: object
  user.CartProduct:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      manufacturer:
        type: string
      mqty:
        type: integer
      mqty_id:
        description: What are these three?
        type: integer
      mqtyLabel:
        type: string
      partNumber:
        type: string
      price:
        type: number
      product_id:
        type: integer
      qty:
        type: integer
      savedForLater:
        type: boolean
      startingPrice:
        description: What is this?
        type: number
      title:
        type: string
      updatedAt:
        type: string
      weight:
        type: number
      weightUnits:
        type: string
    type: object
  user.CartProductCreateDto:
    properties:
      product_id:
        type: integer
      qty:
        type: integer
      savedForLater:
        type: boolean
    required:
    - product_id
    - qty
    type: object
  user.Country:
    properties:
      displayName:
        type: string
      id:
        type: integer
      name:
        type: string
      position:
        type: integer
      ppCode:
        type: string
    type: object
  user.PaymentMethod:
    properties:
      createdAt:
        type: string
      displayName:
        type: string
      locked:
        type: boolean
      method:
        type: string
      name:
        type: string
      position:
        type: integer
      provider:
        type: string
      updatedAt:
        type: string
    type: object
  user.PaymentMethodName:
    enum:
    - PAYPAL_CREDIT
    - PAYPAL_EXPRESS
    - STRIPE_CREDIT
    type: string
    x-enum-varnames:
    - PaypalCreditCard
    - PaypalExpress
    - StripeCreditCard
  user.State:
    properties:
      fullName:
        type: string
      id:
        type: integer
      info:
        type: string
      name:
        type: string
      tax:
        type: number
    type: object
  user.User:
    properties:
      addresses:
        description: Joins
        items:
          $ref: '#/definitions/user.Address'
        type: array
      cards:
        items:
          $ref: '#/definitions/user.Card'
        type: array
      carts:
        items:
          $ref: '#/definitions/user.Cart'
        type: array
      createdAt:
        type: string
      customer_id:
        type: string
      email:
        type: string
      id:
        type: integer
      lastLockoutAt:
        type: string
      lastLoggedIn:
        type: string
      location:
        type: string
      name:
        type: string
      passwordResetAt:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  user.UserLoginDto:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: avEryStrongPass@93
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  user.UserSignUpDto:
    properties:
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: avEryStrongPass@93
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
  title: Pex Universe API
  version: "1.0"
paths:
  /health:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.Hello'
      summary: Database Health Indicator
      tags:
      - default
  /hello:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.Hello'
      summary: Hello World
      tags:
      - default
  /v1/cart:
    get:
      description: Get a List of Items in the `Cart`
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.CartProduct'
            type: array
      tags:
      - cart
    post:
      description: Add a new Item to the cart
      parameters:
      - description: Cart Product Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CartProductCreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.CartProduct'
      tags:
      - cart
  /v1/categories:
    get:
      description: Get List of `Categories`
      parameters:
      - default: 1
        description: page number
        in: query
        name: page
        type: integer
      - default: 10
        description: limit of results
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/routes.CategoriesResp'
            type: array
      tags:
      - products
  /v1/categories/{id}:
    get:
      description: Get `Category` Info By ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Category'
      tags:
      - products
  /v1/categories/{id}/children:
    get:
      description: Get List of `Categories` as Children of a `Category` with ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Category'
      tags:
      - products
  /v1/countries:
    get:
      description: Get List of `Country`es by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.Country'
            type: array
      tags:
      - utility
  /v1/home-page:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.HomePageResp'
      tags:
      - homepage
  /v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserLoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      tags:
      - auth
  /v1/logout:
    post:
      responses: {}
      summary: Log out of the current session
      tags:
      - auth
  /v1/products:
    get:
      parameters:
      - description: Category ID
        in: query
        name: category_id
        type: integer
      - default: 1
        description: page number
        in: query
        name: page
        type: integer
      - default: 10
        description: limit of results
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.ProductsResp'
      tags:
      - products
  /v1/products/{id}:
    get:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
      tags:
      - products
  /v1/profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      summary: Get Profile Info
      tags:
      - profile
    put:
      parameters:
      - description: Profile Update Dto
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/routes.ProfileUpdateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
      summary: Update Profile
      tags:
      - profile
  /v1/profile/addresses:
    get:
      description: Get List of `Address`es for the current `User`
      parameters:
      - default: 1
        description: page number
        in: query
        name: page
        type: integer
      - default: 10
        description: limit of results
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.AddressesResponse'
      tags:
      - addresses
    post:
      description: Create a new `Address` for the current `User`
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.AddressCreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.Address'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      tags:
      - addresses
  /v1/profile/addresses/{id}:
    delete:
      description: Get `Address` Info By ID
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EntityDeletedResponse'
      tags:
      - addresses
    get:
      description: Get `Address` Info By ID
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Address'
      tags:
      - addresses
    put:
      description: Update an `Address` by it's `ID`.
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.AddressUpdateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Address'
      tags:
      - addresses
  /v1/profile/cards:
    get:
      description: Get a List of Saved `Card`s by the current `User`
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.Card'
            type: array
      tags:
      - cards
    post:
      description: Create a new Credit/Debit Card for User
      parameters:
      - description: Card Create Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CardCreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.Card'
      tags:
      - cards
  /v1/profile/cards/{id}:
    delete:
      description: Delete a Card by ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EntityDeletedResponse'
      tags:
      - cards
    get:
      description: Get a List of Saved `Card`s by the current `User`
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Card'
      tags:
      - cards
  /v1/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Sign Up Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserSignUpDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
      tags:
      - auth
  /v1/states:
    get:
      description: Get List of `States`es by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.State'
            type: array
      tags:
      - utility
swagger: "2.0"
