basePath: /
definitions:
  address.Address:
    properties:
      city:
        type: string
      company:
        type: string
      country:
        $ref: '#/definitions/address.Country'
      createdAt:
        type: string
      email:
        type: string
      ext:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      state:
        $ref: '#/definitions/address.State'
      streetAddress1:
        type: string
      streetAddress2:
        type: string
      updatedAt:
        type: string
      verified:
        type: boolean
      zip:
        type: string
    type: object
  address.AddressUpdateDto:
    properties:
      city:
        type: string
      company:
        type: string
      countryId:
        type: integer
      email:
        type: string
      ext:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      stateId:
        type: integer
      streetAddress1:
        type: string
      streetAddress2:
        type: string
      zip:
        type: string
    type: object
  address.Country:
    properties:
      displayName:
        type: string
      name:
        type: string
      position:
        type: integer
      ppCode:
        type: string
    type: object
  address.State:
    properties:
      fullName:
        type: string
      info:
        type: string
      name:
        type: string
      tax:
        type: number
    type: object
  routes.AddressesResponse:
    properties:
      currentPage:
        type: integer
      data:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      totalPages:
        type: integer
    type: object
  routes.Hello:
    properties:
      message:
        type: string
    type: object
  routes.ProfileUpdateDto:
    properties:
      name:
        example: John Doe
        type: string
    required:
    - name
    type: object
  user.User:
    properties:
      addresses:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  user.UserLoginDto:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: Very Strong Password
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  user.UserSignUpDto:
    properties:
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: avEryStrongPass@93
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
info:
  contact: {}
  title: Pex Universe API
  version: "1.0"
paths:
  /health:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.Hello'
      summary: Database Health Indicator
      tags:
      - default
  /hello:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.Hello'
      summary: Hello World
      tags:
      - default
  /v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserLoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      tags:
      - auth
  /v1/logout:
    post:
      responses: {}
      summary: Log out of the current session
      tags:
      - auth
  /v1/profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      summary: Get Profile Info
      tags:
      - profile
    put:
      parameters:
      - description: Profile Update Dto
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/routes.ProfileUpdateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
      summary: Update Profile
      tags:
      - profile
  /v1/profile/addresses:
    get:
      description: Get List of `Address`es for the current `User`
      parameters:
      - default: 1
        description: page number
        in: query
        name: page
        type: integer
      - default: 10
        description: limit of results
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/routes.AddressesResponse'
            type: array
      tags:
      - profile
    post:
      description: Create a new `Address` for the current `User`
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/address.Address'
      tags:
      - profile
  /v1/profile/addresses/{id}:
    get:
      description: Get `Address` Info By Id
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/address.Address'
      tags:
      - profile
    put:
      description: Update an `Address` by it's `ID`.
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/address.AddressUpdateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/address.Address'
      tags:
      - profile
  /v1/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Sign Up Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserSignUpDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
      tags:
      - auth
swagger: "2.0"
